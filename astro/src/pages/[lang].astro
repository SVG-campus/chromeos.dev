---
import { getMicrocopyFromLangCode } from '$$microcopy';
import Wrapper from '$layouts/wrapper.astro';
import AnimatedHero from '$components/home/AnimatedHero.svelte';
import Routing from '$components/home/Routing.svelte';
import Stats from '$components/home/Stats.svelte';
import StatsFootnote from '$components/home/StatsFootnote.svelte';
import Linux from '$components/home/Linux.svelte';
import { home, landings } from '$$sanity';

/**
 * Builds paths for content files
 * @return {object[]} Paths
 */
export function getStaticPaths() {
  return home.map((h) => ({
    params: {
      lang: h._langCode,
    },
    props: {
      data: h,
      microcopy: getMicrocopyFromLangCode(h._langCode),
    },
  }));
}

const { microcopy, data } = Astro.props;
const { locale } = microcopy;
// console.log(locale);
// const hero = { heading: home.hero.heading, copy: home.hero.copy };

// console.log(languages);
const {
  // chromebook,
  // commercial,
  hero,
  // community,
  linux,
  // posts,
  // quotes,
  routing,
  stats,
  // stories,
  // subnav,
} = data;
// Get routing CTA URLs
for (const r of routing) {
  if (r.cta?.ref) {
    r.cta.url = landings.find((l) => l._id === r.cta.ref)._path;
  }
}

linux.cta.url = landings.find((l) => l._id === linux.cta.ref)._path;
---

<Wrapper locale={locale} metadesc="" title="ChromeOS.dev">
  <AnimatedHero hero={hero} client:load />
  <Routing cards={routing} />
  <Linux linux={linux} />
  <Stats stats={stats} />

  <StatsFootnote stats={stats.items} />

  <script>
    // Import Houdini paint setup
    await import('$js/paint.js');
  </script>
</Wrapper>
