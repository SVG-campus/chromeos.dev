---
import { getMicrocopyFromLangCode } from '$$microcopy';
import Wrapper from '$layouts/wrapper.astro';
import AnimatedHero from '$components/home/AnimatedHero.svelte';
import Routing from '$components/home/Routing.svelte';
import Stats from '$components/home/Stats.svelte';
import StatsFootnote from '$components/home/StatsFootnote.svelte';
import Linux from '$components/home/Linux.svelte';
import Stories from '$components/home/Stories.svelte';
import FeaturedPost from '$components/home/FeaturedPost.svelte';
import Posts from '$components/home/Posts.svelte';
import { home, landings, stories, posts } from '$$sanity';

/**
 * Builds paths for content files
 * @return {object[]} Paths
 */
export function getStaticPaths() {
  return home.map((h) => ({
    params: {
      lang: h._langCode,
    },
    props: {
      data: h,
      microcopy: getMicrocopyFromLangCode(h._langCode),
    },
  }));
}

const { microcopy, data } = Astro.props;
const { locale } = microcopy;
// console.log(locale);
// const hero = { heading: home.hero.heading, copy: home.hero.copy };

// console.log(languages);
const {
  // chromebook,
  // commercial,
  hero,
  // community,
  linux,
  posts: postsData,
  // quotes,
  routing,
  stats,
  stories: storiesData,
  // subnav,
} = data;
// Get routing CTA URLs
for (const r of routing) {
  if (r.cta?.ref) {
    r.cta.url = landings.find((l) => l._id === r.cta.ref)._path;
  }
}

linux.cta.url = landings.find((l) => l._id === linux.cta.ref)._path;

const featuredStories = stories.filter((s) => s.featured).slice(0, 3);

const featuredPost = posts.filter((p) => p.featured)[0];
const feature = {
  ...featuredPost,
  cta: {
    text: microcopy.actions.more,
    url: featuredPost._path,
    type: 'medium',
  },
  theme: featuredPost.theme,
  form: 'banner',
};
feature.theme.eyebrow = microcopy.identifiers.featured;

const latestPosts = posts.filter((p) => p._id !== featuredPost._id).slice(0, 3);
---

<Wrapper locale={locale} metadesc="" title="ChromeOS.dev">
  <AnimatedHero hero={hero} client:load />
  <Routing cards={routing} />
  <Linux linux={linux} />
  <Stats stats={stats} />

  {
    featuredStories.length > 0 && (
      <Stories
        title={storiesData.title}
        copy={storiesData.copy}
        cta={storiesData.cta}
        locale={locale.code}
        stories={featuredStories}
      />
    )
  }

  {featuredPost && <FeaturedPost featured={feature} />}

  {
    latestPosts.length > 0 && (
      <Posts
        title={postsData.title}
        copy={postsData.copy}
        cta={postsData.cta}
        locale={locale.code}
        microcopy={microcopy}
        posts={latestPosts}
      />
    )
  }

  <StatsFootnote stats={stats.items} slot="prefooter" />
  <script>
    // Import Houdini paint setup
    await import('$js/paint.js');
  </script>
</Wrapper>
