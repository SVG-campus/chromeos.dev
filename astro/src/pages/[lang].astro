---
import { getMicrocopyFromLangCode } from '$$microcopy';
import Wrapper from '$layouts/wrapper.astro';
import AnimatedHero from '$components/home/animated-hero.svelte';
import { home } from '$$sanity';

/**
 * Builds paths for content files
 * @return {object[]} Paths
 */
export function getStaticPaths() {
  return home.map((h) => ({
    params: {
      lang: h._langCode,
    },
    props: {
      data: h,
      microcopy: getMicrocopyFromLangCode(h._langCode),
    },
  }));
}

const { microcopy, data } = Astro.props;
const { locale } = microcopy;
// console.log(locale);
// const hero = { heading: home.hero.heading, copy: home.hero.copy };

// console.log(languages);
const {
  // chromebook,
  // commercial,
  hero,
  // community,
  // linux,
  // posts,
  // quotes,
  // routing,
  // stats,
  // stories,
  // subnav,
} = data;
---

<Wrapper locale={locale} metadesc="" title="ChromeOS.dev">
  <AnimatedHero hero={hero} client:load />

  <script>
    import { theme } from '$js/theme';
    import { animationPlaceholders } from '$js/constants';

    theme.subscribe((t) => {
      const animation = document.querySelector('.animated-hero--animation');

      if (animation) {
        const img = animation.querySelector('.animated-hero--fallback');

        if (img) {
          img.src = animationPlaceholders[t];
        }
      }
    });
  </script>
</Wrapper>
