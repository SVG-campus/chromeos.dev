---
import Wrapper from '$layouts/wrapper.astro';
// import { findRelated } from '$lib/search';
// import Card from '$components/Card.svelte';

export interface Props {
  title: string;
  metadesc: string;
  props?: Array<{
    property: string;
    content: string;
  }>;
  microcopy: object;
}

const { title, props = [], metadesc, microcopy } = Astro.props;
const { locale } = microcopy;
// const related = findRelated(title, locale.code, Astro.url.pathname);
---

<Wrapper title={title} metadesc={metadesc} locale={locale} props={props}>
  <article class="article">
    <div class="article--header">
      <slot name="header" />
    </div>
    <div class="article--wrapper">
      <div class="article--hero">
        <slot name="hero" />
      </div>
      <aside class="article--extras">
        <slot name="extras" />
      </aside>
      <section class="article--content type" id="article">
        <slot name="content" />
      </section>
    </div>
  </article>
  <aside
    class="wrapper wrapper--padding wrapper--padded wrapper--full-bleed wrapper__contained wrapper__background"
  >
    <!-- <h3 class="article--recommended type--h1">
      {microcopy.microcopy.recommended}
    </h3>
    <div class="article--recommendations">
      {
        related.map((item) => (
          <Card
            title={item.title}
            body={item.metadesc}
            position="end"
            cta={{
              text: '',
              url: item.href,
              type: 'link',
              direction: 'forward',
            }}
          />
        ))
      }
    </div> -->
  </aside>
</Wrapper>

<style lang="scss">
  @import '$sass/shared';

  .article {
    $switch: 890px;
    --grid: unset;
    --inline-extras: 1;
    --inline-subnav: 1;

    @include mq($switch) {
      --grid: 1fr minmax(50ch, 80ch) minmax(235px, 320px) 1fr;
      --inline-extras: 0;
    }

    container-type: inline-size;

    $this: &;
    &--wrapper {
      display: grid;
      grid-auto-flow: dense;
      grid-template-columns: var(--grid);
      margin-top: 2.5rem;
      column-gap: 2.5rem;

      @container (min-width: #{$switch}) {
        grid-template-rows: auto auto 1fr auto;
      }
    }

    &--content,
    &--extras {
      padding-inline: 1.5rem;
      @container (min-width: #{$switch}) {
        grid-column: 2;
      }
    }

    &--content {
      padding-block-end: 2.5rem;
    }

    &--hero {
      margin-block-end: 2.5rem;
      margin-block-start: -5rem;
      aspect-ratio: 16 / 9;
      border-radius: 0.3125rem;
      box-shadow: 0 2px 1.5rem rgba(0, 0, 0, 0.2);
      position: relative;
      overflow: hidden;
      width: calc(100% - 3rem);
      margin-inline: auto;

      > :global(img),
      > :global(video) {
        object-fit: cover;
        width: 100%;
        height: 100%;
      }

      &:empty {
        display: none;
      }

      @container (min-width: #{$switch}) {
        grid-column: 2 / span 2;
      }
    }

    &--extras {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      margin-block-end: 2.5rem;

      @container (min-width: #{$switch}) {
        padding-inline: 0;
        grid-column: 3;
        // grid-row: 1 / span 2;

        // &:not(:nth-child(1)) {
        //   grid-row: 2 / span 2;
        // }
        // margin-block-end: 0;
      }
    }

    &--recommended {
      margin-block: 0;
      margin-inline: auto;
      max-width: 30ch;
      text-align: center;
    }

    &--recommendations {
      grid-template-columns: repeat(auto-fit, minmax(18.75rem, 1fr));
      display: grid;
      gap: 2.5rem 1.5rem;
      margin-block: 2.5rem;
    }

    :global(.extras-section) {
      display: flex;
      flex-direction: column;
      gap: 0.25rem;
    }
  }
</style>
